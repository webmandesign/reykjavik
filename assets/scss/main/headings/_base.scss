/* FILE: main/headings/_base.scss */

#{$selectors_headings} {
	@extend %font_headings;

	@if variable-exists( 'selector_editor_wrapper' ) {
		@at-root html :where( & ) {
			//
			// We can't use `@extend` here,
			// we have to use the actual code!
			//
			// @see  _extend/_colors.scss â†’ %colors_site_content_headings
			//
			color: map_get( $customize_options, 'color_content_headings' );
			color: var(--color_content_headings);
		}
	} @else {
		@extend %colors_site_content_headings;
	}
}

	h1.h2,
	h1.h3,
	h1.display-1,
	h1.display-2,
	h1.display-3,
	h1.display-4,
	h1.has-display-1-font-size,
	h1.has-display-2-font-size,
	h1.has-display-3-font-size,
	h1.has-display-4-font-size {
		font-style: inherit;
	}

	@for $i from 1 through 9 {

		$weight: $i * 100;

		#{$selectors_headings} {

			&.weight-#{$weight},
			&.has-#{$weight}-font-weight {
				font-weight: $weight;
			}

		}

	}

@include h_tags( $ratio_maj + $ratio_min / 2, true ); // Heading styles on small devices

@include media( map_get( $breakpoint, 'm' ) ) {
	@include h_tags(); // Heading styles on large devices
}

// Screen reader hidden headings.
h1.screen-reader-text,
h2.screen-reader-text,
h3.screen-reader-text,
h4.screen-reader-text {
	color: inherit; // Fixing some accessibility testing tools errors.
}
